"0",""
"0","word_by_word <- c()"
"0","complex.word_by_word <- c()"
"0","folio_by_word <- c()"
"0","section_by_word <- c()"
"0","quire_by_word <- c()"
"0","panel_by_word <- c()"
"0","language_by_word <- c()"
"0","hand_by_word <- c()"
"0","misc_by_word <- c()"
"0","d.hand_by_word <- c()"
"0","place_by_word <- c()"
"0","linenum_by_word <- c()"
"0","transcriber_by_word <- c()"
"0",""
"0","line.init <- c() # Placement from the first word in the line"
"0","line.fin <- c() # Placement from the last word in the line"
"0",""
"0","par.init <- c() # Placement from the first word in the paragraph"
"0","par.fin <- c() # # Placement from the last word in the line"
"0"," "
"0",""
"0",""
"0","print (""Lines read:"")"
"1","[1]"
"1"," ""Lines read:"""
"1","
"
"0","for (i in 1:length(interlinear_full_lines$line)) {"
"0","  "
"0","  line <- interlinear_full_lines[i,1]"
"0","  complex.line <- interlinear_full_lines[i,13]"
"0","  "
"0","  line <- gsub('[=\\!\\%]', '', line) # Remove Filler and paragraph boundary characters"
"0","  line <- gsub('\\-$', '', line) # Remove dashes at the end of words (line boundary characters)"
"0","  line <- gsub('-', '\\.', line) # Elsewhere they are treated as word boundaries (as between labels)"
"0",""
"0","  complex.line <- gsub('[=\\!\\%]', '', complex.line) # Remove Filler and paragraph boundar characters"
"0","  complex.line <- gsub('\\-$', '', complex.line) # Remove dashes at the end of words (line boundary characters)"
"0","  complex.line <- gsub('-', '\\.', complex.line) # Elsewhere they are treated as word boundaries (as between labels)"
"0","  "
"0","  "
"0","  line_list <- unlist(strsplit(line, '[\\.,-]'))"
"0","  complex.line_list <- unlist(strsplit(complex.line, '[\\.,-]'))"
"0","  line_len <- length(line_list)"
"0",""
"0","  if (i%%1000 == 0) {"
"0","    "
"0","    print(i)"
"0","    "
"0","  }"
"0","  if (line_len > 0) {"
"0","    for (j in 1:line_len) {"
"0","      "
"0","      "
"0","      word_by_word <- c(word_by_word, line_list[j])"
"0","      complex.word_by_word <- c(complex.word_by_word, complex.line_list[j])"
"0","      folio_by_word <- c(folio_by_word, folio_by_line[i])"
"0","      section_by_word <- c(section_by_word, section_by_line[i])"
"0","      quire_by_word <- c(quire_by_word, quire_by_line[i])"
"0","      panel_by_word <- c(panel_by_word, panel_by_line[i])"
"0","      language_by_word <- c(language_by_word, language_by_line[i])"
"0","      hand_by_word <- c(hand_by_word, hand_by_line[i])"
"0","      misc_by_word <- c(misc_by_word, misc_by_line[i])"
"0","      d.hand_by_word <- c(d.hand_by_word, d.hand_by_line[i])"
"0","      place_by_word <- c(place_by_word, place_by_line[i])"
"0","      linenum_by_word <- c(linenum_by_word, linenum_by_line[i])"
"0","      transcriber_by_word <- c(transcriber_by_word, transcriber_by_line[i])"
"0","      "
"0","      "
"0","      # Line placement"
"0","      line.init <- c(line.init, j) "
"0","      line.fin <- c(line.fin, line_len - j + 1)"
"0","      "
"0","      # Paragraph placement"
"0","      if (is.na(interlinear_full_lines$par_init[i])) {"
"0","        par.init <- c(par.init, NA)"
"0","      } else {"
"0","        par.init <- c(par.init, (as.numeric(interlinear_full_lines$par_init[i]) + j) )"
"0","      }"
"0","      if (is.na(interlinear_full_lines$par_fin[i])) {"
"0","        par.fin <- c(par.fin, NA)"
"0","      } else {"
"0","        par.fin <- c(par.fin, (as.numeric(interlinear_full_lines$par_fin[i]) + line_len - j + 1) )"
"0","      }"
"0","      "
"0","      "
"0","    }"
"0","  }"
"0","}"
"1","[1]"
"1"," 1000"
"1","
"
"1","[1]"
"1"," 2000"
"1","
"
"1","[1]"
"1"," 3000"
"1","
"
"1","[1]"
"1"," 4000"
"1","
"
"1","[1]"
"1"," 5000"
"1","
"
"1","[1]"
"1"," 6000"
"1","
"
"1","[1]"
"1"," 7000"
"1","
"
"1","[1]"
"1"," 8000"
"1","
"
"1","[1]"
"1"," 9000"
"1","
"
"1","[1]"
"1"," 10000"
"1","
"
"1","[1]"
"1"," 11000"
"1","
"
"1","[1]"
"1"," 12000"
"1","
"
"1","[1]"
"1"," 13000"
"1","
"
"1","[1]"
"1"," 14000"
"1","
"
"1","[1]"
"1"," 15000"
"1","
"
"1","[1]"
"1"," 16000"
"1","
"
"1","[1]"
"1"," 17000"
"1","
"
"0","View(full_page_lines)"
"0","View(interlinear_full_lines)"
"0","View(takahashi_lines)"
"0",""
"0",""
"0",""
"0",""
"0","interlinear_full_words <- data.frame(word_by_word, complex.word_by_word, folio_by_word, section_by_word, quire_by_word, panel_by_word, language_by_word, hand_by_word, misc_by_word, d.hand_by_word, place_by_word, linenum_by_word, transcriber_by_word, line.init, line.fin, par.init, par.fin, stringsAsFactors = FALSE)"
"0",""
"0","names(interlinear_full_words) <- c('word', 'complex_word', 'folio', 'section', 'quire', 'panel', 'language', 'hand', 'misc', 'd.hand', 'placement', 'line_number', 'transcriber', 'line_initial', 'line_final', 'par_initial', 'par_final')"
"0",""
"0",""
"0",""
"0","# Write the file"
"0",""
"0","write.table(interlinear_full_words, file = ""Voynich_texts/interlinear_full_words.txt"", sep = ""\t"", row.names=FALSE)"
"0",""
"0","interlinear_full_words[interlinear_full_words$word != interlinear_full_words$complex_word,]"
